@using ti8m.BeachBreak.Client
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
                <NotAuthorized>
                    @{
                        var returnUrl = System.Net.WebUtility.UrlEncode($"/{routeData.RouteValues.Values.FirstOrDefault()?.ToString() ?? string.Empty}");
                        NavigationManager.NavigateTo($"/authentication/login?returnUrl={returnUrl}", true);
                    }
                </NotAuthorized>
                <Authorizing>
                    <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
                        <p>Authorizing...</p>
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
    </Router>
</CascadingAuthenticationState>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
}
