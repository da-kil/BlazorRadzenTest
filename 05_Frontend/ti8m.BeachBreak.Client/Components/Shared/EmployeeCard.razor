@using Radzen
@using Radzen.Blazor
@using ti8m.BeachBreak.Client.Services

<link href="css/assignment-dialogs.css" rel="stylesheet" />

<div class="employee-card @(IsSelected ? "selected" : "") @(IsCurrent ? "current" : "")"
     @onclick="@HandleClick">

    <div class="selection-indicator">
        <RadzenIcon Icon="@(IsCurrent ? "star" : "check")" />
    </div>

    <div class="employee-header">
        <div class="employee-mini-avatar">
            @GetEmployeeInitials()
        </div>
        <div class="employee-details">
            <RadzenText TextStyle="TextStyle.Subtitle2" Class="fw-bold">@Employee.FullName</RadzenText>
            <div class="employee-email" title="@Employee.EMail">
                <RadzenText TextStyle="TextStyle.Caption" Class="text-muted">@Employee.EMail</RadzenText>
            </div>
        </div>
    </div>

    <div class="employee-meta">
        @Employee.Department â€¢ @Employee.Role
        @if (IsCurrent)
        {
            <div style="color: #28a745; font-weight: 600; margin-top: 0.25rem;">
                <RadzenIcon Icon="star" Style="font-size: 0.75rem; margin-right: 0.25rem;" />
                Current Assignee
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public EmployeeDto Employee { get; set; } = default!;
    [Parameter] public bool IsSelected { get; set; } = false;
    [Parameter] public bool IsCurrent { get; set; } = false;
    [Parameter] public EventCallback<EmployeeDto> OnClick { get; set; }
    [Parameter] public bool ShowCurrentAssigneeLabel { get; set; } = true;

    private string GetEmployeeInitials()
    {
        var names = Employee.FullName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (names.Length >= 2)
        {
            return $"{names[0][0]}{names[1][0]}".ToUpper();
        }
        return names.Length > 0 ? names[0][0].ToString().ToUpper() : "?";
    }

    private async Task HandleClick()
    {
        await OnClick.InvokeAsync(Employee);
    }
}