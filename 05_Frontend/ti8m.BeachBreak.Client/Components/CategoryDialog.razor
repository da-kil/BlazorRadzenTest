@using Radzen
@using Radzen.Blazor
@using ti8m.BeachBreak.Client.Models

<div class="p-3">
    <EditForm Model="@Category" OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator />

        <RadzenTabs>
            <Tabs>
                <RadzenTabsItem Text="ðŸ‡¬ðŸ‡§ English">
                    <div class="p-3">
                        <div class="mb-3">
                            <RadzenText TextStyle="TextStyle.Body1" Class="fw-bold mb-2">Category Name (English) *</RadzenText>
                            <RadzenTextBox @bind-Value="@Category.NameEn"
                                          Placeholder="Enter category name in English"
                                          Class="w-100"
                                          MaxLength="100" />
                            <ValidationMessage For="@(() => Category.NameEn)" />
                        </div>

                        <div class="mb-3">
                            <RadzenText TextStyle="TextStyle.Body1" Class="fw-bold mb-2">Description (English)</RadzenText>
                            <RadzenTextArea @bind-Value="@Category.DescriptionEn"
                                           Placeholder="Enter category description in English"
                                           Rows="3"
                                           Class="w-100"
                                           MaxLength="500" />
                            <ValidationMessage For="@(() => Category.DescriptionEn)" />
                        </div>
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem Text="ðŸ‡©ðŸ‡ª Deutsch">
                    <div class="p-3">
                        <div class="mb-3">
                            <RadzenText TextStyle="TextStyle.Body1" Class="fw-bold mb-2">Category Name (German) *</RadzenText>
                            <RadzenTextBox @bind-Value="@Category.NameDe"
                                          Placeholder="Enter category name in German"
                                          Class="w-100"
                                          MaxLength="100" />
                            <ValidationMessage For="@(() => Category.NameDe)" />
                        </div>

                        <div class="mb-3">
                            <RadzenText TextStyle="TextStyle.Body1" Class="fw-bold mb-2">Description (German)</RadzenText>
                            <RadzenTextArea @bind-Value="@Category.DescriptionDe"
                                           Placeholder="Enter category description in German"
                                           Rows="3"
                                           Class="w-100"
                                           MaxLength="500" />
                            <ValidationMessage For="@(() => Category.DescriptionDe)" />
                        </div>
                    </div>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>

        <div class="row mb-3">
            <div class="col-md-6">
                <RadzenText TextStyle="TextStyle.Body1" Class="fw-bold mb-2">Sort Order</RadzenText>
                <RadzenNumeric @bind-Value="@Category.SortOrder"
                              TValue="int"
                              Min="0"
                              Max="999"
                              Class="w-100" />
                <RadzenText TextStyle="TextStyle.Caption" Class="text-muted">
                    Lower numbers appear first
                </RadzenText>
            </div>
            <div class="col-md-6">
                <div class="mt-4">
                    <RadzenCheckBox @bind-Value="@Category.IsActive" Name="isActive" />
                    <RadzenLabel Text="Active" Component="isActive" Class="ms-2" />
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-end gap-2 mt-4">
            <RadzenButton Text="Cancel"
                         ButtonStyle="ButtonStyle.Light"
                         Click="@(() => DialogService.Close())" />
            <RadzenButton Text="@(IsEditMode ? "Update" : "Create")"
                         ButtonType="ButtonType.Submit"
                         ButtonStyle="ButtonStyle.Primary"
                         IsBusy="@isSaving" />
        </div>
    </EditForm>
</div>

@code {
    [Parameter, EditorRequired] public Category Category { get; set; } = null!;
    [Parameter, EditorRequired] public bool IsEditMode { get; set; }
    [Inject] protected DialogService DialogService { get; set; } = default!;

    private bool isSaving = false;

    private async Task OnValidSubmit()
    {
        if (string.IsNullOrWhiteSpace(Category.NameEn) || string.IsNullOrWhiteSpace(Category.NameDe))
        {
            return;
        }

        isSaving = true;

        try
        {
            Category.NameEn = Category.NameEn.Trim();
            Category.NameDe = Category.NameDe.Trim();
            Category.DescriptionEn = Category.DescriptionEn?.Trim() ?? string.Empty;
            Category.DescriptionDe = Category.DescriptionDe?.Trim() ?? string.Empty;
            Category.LastModified = DateTime.Now;

            DialogService.Close(Category);
        }
        finally
        {
            isSaving = false;
        }
    }
}