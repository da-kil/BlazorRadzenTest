@using Radzen
@using Radzen.Blazor
@using ti8m.BeachBreak.Client.Models.Dto
@using ti8m.BeachBreak.Client.Components.Shared
@using ti8m.BeachBreak.Client.Services
@inject DialogService DialogService

<div class="add-goal-dialog">
    <RadzenStack Gap="1rem">
        <ValidationErrorAlert Errors="@validationErrors" />

        <GoalDetailsFieldset @bind-ObjectiveDescription="@objectiveDescription"
                            @bind-MeasurementMetric="@measurementMetric" />

        <GoalTimeframeFieldset @bind-TimeframeFrom="@timeframeFrom"
                              @bind-TimeframeTo="@timeframeTo" />

        @* Weighting is hidden during in-progress states and will be set during InReview by manager *@

        <RadzenFieldset>
            <HeaderTemplate>
                <RadzenIcon Icon="person" Class="me-2" />
                <span class="fw-bold">Added By</span>
            </HeaderTemplate>
            <ChildContent>
                <RadzenBadge Text="@AddedByRole" BadgeStyle="BadgeStyle.Info" IsPill="true" />
                <RadzenText TextStyle="TextStyle.Caption" Class="text-muted ms-2">
                    This goal will be attributed to @AddedByRole
                </RadzenText>
            </ChildContent>
        </RadzenFieldset>

        <div class="d-flex justify-content-end gap-2 mt-3">
            <RadzenButton Text="Cancel"
                        ButtonStyle="ButtonStyle.Light"
                        Click="@Cancel"
                        Disabled="@isSubmitting" />
            <RadzenButton Text="@(isSubmitting ? "Adding Goal..." : "Add Goal")"
                        Icon="@(isSubmitting ? "" : "add")"
                        ButtonStyle="ButtonStyle.Primary"
                        Click="@Submit"
                        Disabled="@isSubmitting" />
        </div>
    </RadzenStack>
</div>

@code {
    [Parameter] public Guid AssignmentId { get; set; }
    [Parameter] public Guid QuestionId { get; set; }
    [Parameter] public string AddedByRole { get; set; } = "Employee";

    // Pre-populated values for editing pending goals
    [Parameter] public string InitialObjective { get; set; } = "";
    [Parameter] public string InitialMeasurement { get; set; } = "";
    [Parameter] public DateTime InitialTimeframeFrom { get; set; } = DateTime.Today;
    [Parameter] public DateTime InitialTimeframeTo { get; set; } = DateTime.Today.AddMonths(6);

    private string objectiveDescription = "";
    private string measurementMetric = "";
    private DateTime? timeframeFrom = DateTime.Today;
    private DateTime? timeframeTo = DateTime.Today.AddMonths(6);

    private List<string> validationErrors = new();
    private bool isSubmitting = false;

    protected override void OnParametersSet()
    {
        // Pre-populate form with existing values
        objectiveDescription = InitialObjective;
        measurementMetric = InitialMeasurement;
        timeframeFrom = InitialTimeframeFrom;
        timeframeTo = InitialTimeframeTo;
    }

    private bool ValidateForm()
    {
        validationErrors = GoalFormValidator.ValidateGoalDetails(
            objectiveDescription,
            measurementMetric,
            timeframeFrom,
            timeframeTo);

        return !validationErrors.Any();
    }

    private void Submit()
    {
        if (!ValidateForm())
        {
            StateHasChanged();
            return;
        }

        // Return DTO to parent component (OptimizedGoalQuestion)
        // Parent will queue this operation and execute it when "Save Progress" or "Submit" is clicked
        var dto = new AddGoalDto
        {
            QuestionId = QuestionId,
            AddedByRole = AddedByRole,
            ObjectiveDescription = objectiveDescription.Trim(),
            MeasurementMetric = measurementMetric.Trim(),
            TimeframeFrom = timeframeFrom!.Value,
            TimeframeTo = timeframeTo!.Value,
            WeightingPercentage = null // Will be set during InReview by manager
        };

        DialogService.Close(dto);
    }

    private void Cancel()
    {
        DialogService.Close(false);
    }
}

<style>
.add-goal-dialog {
    padding: 1rem;
    max-width: 700px;
}
</style>
