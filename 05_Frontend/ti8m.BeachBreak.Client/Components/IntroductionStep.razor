@using Radzen
@using Radzen.Blazor

<RadzenCard Class="introduction-step">
    <RadzenText TextStyle="TextStyle.H4" Class="text-primary mb-3">
        <RadzenIcon Icon="info" Class="me-2" />
        Introduction and Purpose
    </RadzenText>
    
    <div class="mb-4">
        <RadzenText TextStyle="TextStyle.Body1" Class="mb-3">
            This questionnaire forms the foundation for your upcoming annual performance conversation with your supervisor. 
            It serves to reflect on your performance from the previous year, set goals for the upcoming year, and discuss expectations.
        </RadzenText>
        
        <RadzenText TextStyle="TextStyle.Body1" Class="mb-3">
            Answering the questions should help structure your thoughts and perspectives. 
            They provide both you and your supervisor with a basis for discussing experiences, 
            developments, and plans openly. This ensures we are aligned and can make our collaboration 
            in the coming year even more effective.
        </RadzenText>
        
        <RadzenText TextStyle="TextStyle.Body1" Class="mb-3">
            Your feedback will be handled confidentially and serves exclusively to make the conversation constructive.
        </RadzenText>
    </div>

    <RadzenAlert AlertStyle="AlertStyle.Info" Class="mb-4" ShowIcon="true">
        <RadzenText TextStyle="TextStyle.Body2">
            <strong>Important:</strong> Please complete all sections thoughtfully. 
            Your honest self-reflection will help make this review process more valuable for your professional development.
        </RadzenText>
    </RadzenAlert>

    <div class="features-grid">
        <RadzenRow Gap="1rem">
            <RadzenColumn Size="12" SizeMD="4">
                <div class="text-center p-3 border rounded">
                    <RadzenIcon Icon="timeline" Style="font-size: 2rem; color: var(--rz-primary);" Class="mb-2" />
                    <RadzenText TextStyle="TextStyle.Subtitle2" Class="fw-bold">Self-Reflection</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" Class="text-muted">
                        Evaluate your performance across key competencies
                    </RadzenText>
                </div>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="4">
                <div class="text-center p-3 border rounded">
                    <RadzenIcon Icon="flag" Style="font-size: 2rem; color: var(--rz-success);" Class="mb-2" />
                    <RadzenText TextStyle="TextStyle.Subtitle2" Class="fw-bold">Goal Setting</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" Class="text-muted">
                        Define clear, measurable objectives for 2024
                    </RadzenText>
                </div>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="4">
                <div class="text-center p-3 border rounded">
                    <RadzenIcon Icon="trending_up" Style="font-size: 2rem; color: var(--rz-warning);" Class="mb-2" />
                    <RadzenText TextStyle="TextStyle.Subtitle2" Class="fw-bold">Career Development</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" Class="text-muted">
                        Plan your professional growth and development
                    </RadzenText>
                </div>
            </RadzenColumn>
        </RadzenRow>
    </div>
</RadzenCard>

@code {
    [Parameter] public bool CanProceed { get; set; } = true;
    [Parameter] public EventCallback<bool> CanProceedChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CanProceedChanged.InvokeAsync(true);
    }
}